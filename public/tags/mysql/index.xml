<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>mysql on Unl0ckd</title>
    <link>https://www.chrislockard.net/tags/mysql/</link>
    <description>Recent content in mysql on Unl0ckd</description>
    <image>
      <url>https://www.chrislockard.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.chrislockard.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 26 Nov 2014 12:00:00 -0400</lastBuildDate><atom:link href="https://www.chrislockard.net/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PHP, MySql, and Injection</title>
      <link>https://www.chrislockard.net/posts/php-mysql-injection/</link>
      <pubDate>Wed, 26 Nov 2014 12:00:00 -0400</pubDate>
      
      <guid>https://www.chrislockard.net/posts/php-mysql-injection/</guid>
      <description>Inspired by Jack Daniel&amp;rsquo;s &amp;ldquo;Shoulders of InfoSec Project&amp;rdquo;, this post will be focused on the people and technologies behind one of the most prevalent attacks on web sites: SQL injection.
According to OWASP, injection is the number one attack vector for web applications. Injection attacks can target many different contexts in a web application: HTML, PHP, ASP, Javascript, SQL, etc. Any context in which an interpreter parses input to execute instructions is potentially vulnerable to an injection attack.</description>
    </item>
    
  </channel>
</rss>
